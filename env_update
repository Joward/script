#!/bin/sh

# exit on error
set -e

#sudo
# visudo

#yum repo
# /etc/yum.repos.d/CentOS-Base.repo

echo_info() {
    local message="$1"
    echo " ==== Info :: $message ... ==== "
}

repo_update() {
    local name="$1"

    case $name in
        VDI)
            echo_info "This platform is VDI";;
        centos)
            echo_info "update yum cache"
            sudo yum makecache

            sudo yum install epel-release
            sudo yum makecache;;
        *)
            echo_info "This platform is unknown"
            exit -1;;
    esac
}

repo_update "VDI"

mkdir -p ${HOME}/local/package
cd ${HOME}/local/package

# # ncurses
# lib_install() {
#     local name="$1"

#     echo_info "$name 命令不可用, begin instal $name"
#     sudo yum install $name
# }

# lib_install "ncurses-devel"

clex_install() {
    local pkg_name="clex-4.7"
    cd ${HOME}/local/package

    if [[ -e ${HOME}/local/package/${pkg_name}.tar.gz ]]; then
        echo_info "${pkg_name}.tar.gz is already exist"
    else
        wget https://github.com/xitop/clex/releases/download/v4.7/${pkg_name}.tar.gz
    fi

    if [[ -e ${HOME}/local/package/${pkg_name} ]]; then
        echo_info "${pkg_name} is already exist"
    else
        tar -zxvf ${pkg_name}.tar.gz
    fi
    cd ${pkg_name}

    ./configure --prefix=${HOME}/local/tools/clex
    make
    make install
}

stow_install() {
    local pkg_name="stow-2.3.1"
    cd ${HOME}/local/package

    if [[ -e ${HOME}/local/package/${pkg_name}.tar.gz ]]; then
        echo_info "${pkg_name}.tar.gz is already exist"
    else
        wget https://ftp.gnu.org/gnu/stow/${pkg_name}.tar.gz
    fi

    if [[ -e ${HOME}/local/package/${pkg_name} ]]; then
        echo_info "${pkg_name} is already exist"
    else
        tar -zxvf ${pkg_name}.tar.gz
    fi

    cd ${pkg_name}
    ./configure --prefix=${HOME}/local/tools/stow
    make clean;
    make
    make install
}

delta_install() {
    local pkg_name="delta-0.18.2-x86_64-unknown-linux-musl"
    cd ${HOME}/local/package

    if [[ -e ${HOME}/local/package/${pkg_name}.tar.gz ]]; then
        echo_info "${pkg_name}.tar.gz is already exist"
    else
        wget https://github.com/dandavison/delta/releases/download/0.18.2/${pkg_name}.tar.gz
    fi

    if [[ -e ${HOME}/local/package/${pkg_name} ]]; then
        echo_info "${pkg_name} is already exist"
    else
        tar -zxvf ${pkg_name}.tar.gz
    fi

    mkdir -p ${HOME}/local/tools/delta/bin
    cp -vr ${HOME}/local/package/${pkg_name}/delta ${HOME}/local/tools/delta/bin/

    chmod +x ${HOME}/local/tools/delta/bin/delta
}

fzf_install() {
    git clone --depth 1 https://github.com/junegunn/fzf.git ${HOME}/.fzf
    ${HOME}/.fzf/install
    # source ~/.zshrc 
}

broot_install() {
    local pkg_name="broot"

    if [[ -e ${HOME}/local/tools/broot/bin/broot ]]; then
        echo_info "${pkg_name} is already exist"
    else
        mkdir -p ${HOME}/local/tools/broot/bin
        cd ${HOME}/local/tools/broot/bin

        wget https://dystroy.org/broot/download/x86_64-unknown-linux-gnu/broot
    fi

    chmod +x ${HOME}/local/tools/broot/bin/broot
}

tool_install() {
    local name="$1"

    local command_path=$(which $name)

    if [ -n "$command_path" ]; then
        echo_info "$name 命令可用，路径为：$command_path"
    else
        echo_info "$name 命令不可用, begin instal $name"
        ${name}_install
    fi
}

# tool
tool_install "htop"
tool_install "screen"
tool_install "stow"
tool_install "tig"
tool_install "zsh"
tool_install "clex"
tool_install "fzf"
tool_install "broot"
tool_install "delta"

local_publish() {
    cd ${HOME}/local/tools

    for i in * ; do
        ${HOME}/local/tools/stow/bin/stow $i || exit -1
    done
}
local_publish

# dotfiles
if [[ -e ${HOME}/dotfiles ]]; then
    echo_info "dotfiles is already exist"
else
    git clone https://github.com/Joward/dotfiles.git ${HOME}/dotfiles
fi

cd ${HOME}/dotfiles
# # stow mutt
# # stow ssh
# # stow tmux
# # stow wmii
list=(X11 csh git screen vim zsh)
for i in ${list[*]}; do
    ${HOME}/local/tools/stow/bin/stow -t $HOME $i || exit -1
done


# oh my zs
if [[ -e ${HOME}/.oh-my-zsh ]]; then
    echo_info "oh_my_zsh is already exist"
else
    # sh -c "$(wget -O- https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh)"
    sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
fi

# ~/.zshrc
# ZSH_THEME="bira"
# PATH
# plugin
